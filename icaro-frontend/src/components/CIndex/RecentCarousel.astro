---
import placeholder   from '@/assets/imagedefault.webp'
const newsId = 'default';
---

<style>
.no-scrollbar::-webkit-scrollbar { display: none; }
.no-scrollbar { -ms-overflow-style: none; scrollbar-width: none; }
</style>

<div class="max-full mx-auto grid grid-cols-[auto_1fr_auto] gap-8 items-center">
  <!-- Flecha anterior -->
  <button
    id="prevBtn"
    aria-label="Anterior"
    class="hidden sm:flex w-14 h-14 items-center justify-center text-4xl
           bg-white/80 backdrop-blur rounded-full shadow
           hover:bg-[#1D293D] hover:text-white"
  >‚Äπ</button>

  <!-- Carrusel -->
  <div
    id="slider"
    class="flex gap-8 overflow-x-auto no-scrollbar scroll-smooth
           snap-x snap-mandatory w-full p-7"
  >
    <!-- Las noticias destacadas se cargar√°n aqu√≠ din√°micamente -->
    <div id="loading" class="w-full text-center p-8">
      <p class="text-gray-500">Cargando noticias destacadas...</p>
    </div>
  </div>

  <!-- Flecha siguiente -->
  <button
    id="nextBtn"
    aria-label="Siguiente"
    class="hidden sm:flex w-14 h-14 items-center justify-center text-4xl
           bg-white/80 backdrop-blur rounded-full shadow
           hover:bg-[#1D293D] hover:text-white"
  >‚Ä∫</button>

  <!-- L√≥gica de desplazamiento y carga de datos -->
  <script client:load define:vars={{ placeholderSrc: placeholder.src }}>
    const API_URL = 'http://localhost:8080/api/news/Hnews';
    const slider = document.getElementById('slider');
    const loading = document.getElementById('loading');
    newsId = document.getElementById('id')?.value || 'default';
    const GAP = 32;
    const CARD = () => slider.firstElementChild?.getBoundingClientRect().width + GAP || 0;

    // Funci√≥n para crear el HTML de una noticia
    function createNewsCard(news) {
      return `
        <article class="shrink-0 snap-center flex w-full max-w-[200rem] rounded-xl ring-1 ring-gray-200 border-r-4 border-[#006D38]">
          <div class="basis-4/12 relative">
            <img
              src="http://localhost:8080/assets/news/default.png"
              alt="${news.title || 'Noticia destacada'}"
              data-news-image="${news.id || ''}"
              class="absolute inset-0 w-full h-full object-contain p-3 transition-opacity duration-300"
              loading="lazy"
              onerror="this.src='http://localhost:8080/assets/news/default.png'"
            />
          </div>
          <div class="basis-8/12 p-8 flex flex-col justify-between bg-[#EAF4EA]">
            <div>
              <h3 class="text-2xl font-semibold text-[#231F20]">${news.title || 'Sin t√≠tulo'}</h3>
              ${news.authors && news.authors !== 'Autor no especificado' && news.authors.trim() !== '' ? 
                `<p class="text-lg text-gray-500 line-clamp-1">${news.authors}</p>` : 
                ''
              }
              <p class="text-base text-gray-600 mt-3 line-clamp-3">${news.description || 'Sin descripci√≥n disponible'}</p>
            </div>
            ${news.link ? `
              <a
                href="${news.link}"
                class="mt-4 text-lg underline text-[#006D38] hover:text-[#004d29]"
                target="_blank"
                rel="noopener noreferrer"
              >
                Ver publicaci√≥n ‚Üí
              </a>
            ` : ''}
          </div>
        </article>
      `;
    }

    // Funci√≥n para cargar imagen espec√≠fica
    async function loadNewsImage(imgElement, newsId) {
      console.log(`üîç Intentando cargar imagen para noticia ID: ${newsId}`);
      if (!newsId) return;
      
      try {
        console.log(`üîç Cargando imagen para noticia: ${newsId}`);
        const response = await fetch(`http://localhost:8080/api/news/check-image/${newsId}`);
        console.log("Respuesta: ", response);
        if (response.ok) {
          const data = await response.json();
          console.log(`üìÑ Respuesta para ${newsId}:`, data);
          
          if (data.exists && data.imageUrl) {
            // Construir la URL completa
            const fullImageUrl = data.imageUrl.startsWith('http') 
              ? data.imageUrl 
              : `http://localhost:8080${data.imageUrl}`;
            
            console.log(`üñºÔ∏è Cargando imagen desde: ${fullImageUrl}`);
            imgElement.src = fullImageUrl;
          } else {
            console.log(`‚ùå No existe imagen para noticia: ${newsId}`);
          }
        } else {
          console.warn(`‚ùå Error HTTP ${response.status} para noticia ${newsId}`);
        }
      } catch (error) {
        console.error(`‚ùå Error al cargar imagen para noticia ${newsId}:`, error);
      }
    }

    // Funci√≥n para cargar todas las im√°genes despu√©s de crear las tarjetas
    function loadAllImages() {
      const imageElements = slider.querySelectorAll('img[data-news-image]');
      imageElements.forEach(img => {
        const newsId = img.getAttribute('data-news-image');
        if (newsId) {
          loadNewsImage(img, newsId);
        }
      });
    }

    // Funci√≥n para cargar noticias destacadas
    async function loadHighlightedNews() {
      try {
        const response = await fetch(API_URL);
        
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const highlightedNews = await response.json();
        
        // Limpiar el slider
        slider.innerHTML = '';
        
        if (!highlightedNews || highlightedNews.length === 0) {
          slider.innerHTML = `
            <div class="w-full text-center p-8">
              <p class="text-gray-500">No hay noticias destacadas disponibles.</p>
            </div>
          `;
          return;
        }
        
        // Crear las tarjetas de noticias
        highlightedNews.forEach(news => {
          slider.innerHTML += createNewsCard(news);
        });

        // Cargar las im√°genes despu√©s de crear todas las tarjetas
        loadAllImages();
        
        console.log(`‚úÖ Cargadas ${highlightedNews.length} noticias destacadas`);
        
      } catch (error) {
        console.error('‚ùå Error al cargar noticias destacadas:', error);
        slider.innerHTML = `
          <div class="w-full text-center p-8">
            <p class="text-red-500">Error al cargar las noticias destacadas.</p>
            <button 
              onclick="loadHighlightedNews()" 
              class="mt-2 px-4 py-2 bg-[#006D38] text-white rounded hover:bg-[#005229]"
            >
              Reintentar
            </button>
          </div>
        `;
      }
    }

    function scrollSlide(dir) {
      if (!slider.firstElementChild || slider.firstElementChild.textContent.includes('Cargando') || 
          slider.firstElementChild.textContent.includes('Error') || 
          slider.firstElementChild.textContent.includes('No hay noticias')) {
        return;
      }

      if (dir < 0 && slider.scrollLeft === 0) {
        slider.scrollLeft = slider.scrollWidth - slider.clientWidth;
        return;
      }
      if (dir > 0 && Math.ceil(slider.scrollLeft + slider.clientWidth) >= slider.scrollWidth) {
        slider.scrollLeft = 0;
        return;
      }
      slider.scrollBy({ left: dir * CARD(), behavior: 'smooth' });
    }

    // Event listeners para las flechas
    document.getElementById('prevBtn')?.addEventListener('click', () => scrollSlide(-1));
    document.getElementById('nextBtn')?.addEventListener('click', () => scrollSlide(1));

    // Hacer la funci√≥n disponible globalmente para el bot√≥n de reintentar
    window.loadHighlightedNews = loadHighlightedNews;

    // Cargar noticias al inicializar
    loadHighlightedNews();
  </script>
</div>