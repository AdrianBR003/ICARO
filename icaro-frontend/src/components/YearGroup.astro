---
const { group } = Astro.props;
const threshold = 5;
const groupId = `year-${group.year}`;
---
<details open={group.year === new Date().getFullYear()} class="group border border-gray-300 rounded mb-6">
  <summary
    class="flex items-center justify-between px-8 py-4
           bg-[#EAF4EA] hover:bg-[#D4EAD4]
           cursor-pointer text-gray-900 font-bold text-2xl
           transition-colors"
  >
    <span class="flex items-center space-x-3">
      <svg
        class="h-6 w-6 transform transition-transform group-open:rotate-90"
        fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"
      >
        <path d="M9 5l7 7-7 7" />
      </svg>
      <span>{group.year}</span>
    </span>
  </summary>

  <div id={groupId} class="p-6 bg-gray-50 space-y-8" data-threshold={threshold}>
    {group.items.length > 0 ? (
      group.items.map((item, idx) => (
        <article
          class={`year-item border border-gray-200 p-6 bg-white rounded-lg shadow-sm
                  hover:shadow-md transition ${idx >= threshold ? 'hidden' : ''}`}
        >
          <h3 class="text-lg font-bold text-gray-800 mb-2">{item.title}</h3>
          <p class="text-sm text-gray-600 italic mb-1">
            Participantes: {item.participants.join(", ")}
          </p>
          <p class="text-sm text-gray-600 mb-4">Tipo: {item.type}</p>
          <div class="flex flex-wrap gap-3 text-sm">
            {item.externalIds.map(id => {
              const isDoi = /^\d+\.\d+/.test(id);
              return (
                <a
                  href={isDoi ? `https://doi.org/${id}` : "#"}
                  class="underline"
                  target={isDoi ? "_blank" : "_self"}
                >
                  {isDoi ? "DOI" : id}
                </a>
              );
            })}
          </div>
        </article>
      ))
    ) : (
      <div class="p-6 bg-white rounded-lg border border-gray-200 text-center text-gray-600">
        No hay proyectos registrados para {group.year}.
      </div>
    )}

    {group.items.length > threshold && (
      <button
        id={`load-more-${groupId}`}
        class="mt-4 block mx-auto px-4 py-2 bg-[#EAF4EA] hover:bg-[#D4EAD4]
               text-gray-800 rounded-lg transition-colors"
      >
        Cargar m√°s
      </button>
    )}
  </div>
</details>

<style is:global>
  details > summary::-webkit-details-marker { display: none; }
</style>

<script type="module" client:load>
  document.querySelectorAll('div[id^="year-"]').forEach(container => {
    const threshold = parseInt(container.dataset.threshold, 10);
    const items     = Array.from(container.querySelectorAll('.year-item'));
    const btn       = document.getElementById(`load-more-${container.id}`);
    let visible     = threshold;

    if (btn) {
      btn.addEventListener('click', () => {
        items.slice(visible, visible + threshold).forEach(el => el.classList.remove('hidden'));
        visible += threshold;
        if (visible >= items.length) btn.remove();
      });

      const details = container.closest('details');
      details.addEventListener('toggle', () => {
        if (details.open) {
          visible = threshold;
          items.forEach((el, i) => el.classList.toggle('hidden', i >= threshold));
          if (visible < items.length) btn.style.display = '';
        }
      });
    }
  });
</script>
