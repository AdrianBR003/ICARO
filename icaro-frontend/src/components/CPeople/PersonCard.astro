---
interface Props {
  news: {
    id: string;
    title: string;
    description: string;
    participants: string[];
    FirstprojectDate: string;
    SecondprojectDate: string;
    tags: string[];
    workIds?: string[];
    image?: string;
    link?: string;
    [key: string]: any;
  };
  isAdmin?: boolean;
}

const { news, isAdmin = false } = Astro.props;
const cardId = `news-card-${news.id}`;
const modalId = `edit-modal-${news.id}`;
---

<div id={cardId} data-card-id={news.id} class="news-card bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow relative flex">
  <!-- Botones de admin -->
  <div class="absolute top-3 right-3 flex flex-col gap-2 admin-buttons">
    <button
      class="edit-btn hidden z-10 p-2 rounded-full bg-white/90 hover:bg-gray-100 transition-colors shadow-sm"
      onclick={`openEditModal('${modalId}')`}
      aria-label="Editar noticia"
    >
      <!-- SVG de lápiz -->
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-600" viewBox="0 0 20 20" fill="currentColor">
        <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
      </svg>
    </button>

    <button
      class="delete-btn hidden z-10 p-2 rounded-full bg-white/90 hover:bg-red-100 transition-colors shadow-sm"
      onclick={`deleteNews('${news.id}')`}
      aria-label="Eliminar noticia"
    >
      <!-- SVG de basura -->
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-600" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
      </svg>
    </button>
  </div>

  {news.image && (
    <div class="flex-shrink-0 flex items-center justify-center w-48 bg-gray-200 overflow-hidden">
      <img 
        src={news.image} 
        alt={news.title} 
        class="w-full h-full object-cover"
        loading="lazy"
      />
    </div>
  )}

  <div class="p-6 flex-1">
    <h3 class="text-xl font-bold mb-2 text-gray-900">{news.title}</h3>
    <p class="text-gray-600 mb-4 line-clamp-3">{news.description}</p>

    {news.participants?.length > 0 && (
      <p class="text-sm text-gray-500 mb-3">
        <span class="font-medium">Participantes:</span> {news.participants.join(", ")}
      </p>
    )}

    <div class="flex gap-4 text-sm text-gray-500 mb-3">
      {news.FirstprojectDate && <div><span class="font-medium">Publicación:</span> {news.FirstprojectDate}</div>}
      {news.SecondprojectDate && <div><span class="font-medium">Actualización:</span> {news.SecondprojectDate}</div>}
    </div>

    {news.tags?.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-4">
        {news.tags.map(tag => <span class="tag inline-block px-3 py-1 bg-gray-100 text-gray-700 text-xs rounded-full">{tag}</span>)}
      </div>
    )}

    {news.link && (
      <a href={news.link} class="inline-flex items-center text-[#006D38] hover:text-[#005229] font-medium text-sm transition-colors" target="_blank" rel="noopener noreferrer">
        Ver más
      </a>
    )}
  </div>

  <!-- Modal simplificado tipo ejemplo -->
  <div id={modalId} class="modal hidden fixed inset-0 z-50 flex items-center justify-center p-4">
    <div class="modal-overlay absolute inset-0 bg-black/50" onclick={`closeEditModal('${modalId}')`}></div>

    <div class="relative bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto p-6">
      <h3 class="text-xl font-bold mb-4">Editar Noticia</h3>
      <form class="space-y-4">
        <input type="text" value={news.title} class="w-full px-3 py-2 border rounded-md" />
        <textarea class="w-full px-3 py-2 border rounded-md h-32">{news.description}</textarea>

        <div class="flex gap-4 pt-4">
          <button type="button" onclick={`closeEditModal('${modalId}')`} class="px-4 py-2 border rounded-md hover:bg-gray-50">Cancelar</button>
          <button type="submit" class="px-4 py-2 bg-[#006D38] text-white rounded-md hover:bg-[#005229]">Guardar Cambios</button>
        </div>
      </form>
    </div>
  </div>
</div>

<style is:global>
.modal {
  opacity: 0;
  pointer-events: none;
}
.modal:not(.hidden) {
  opacity: 1;
  pointer-events: auto;
}
.line-clamp-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
</style>

<script is:inline>
function openEditModal(modalId) {
  document.getElementById(modalId)?.classList.remove('hidden');
}
function closeEditModal(modalId) {
  document.getElementById(modalId)?.classList.add('hidden');
}

async function checkAndToggleAdminButtons() {
  try {
    const response = await fetch("/api/session/check-admin", { credentials: "include" });
    if (response.ok) {
      const isAdmin = await response.json();
      document.querySelectorAll('.edit-btn, .delete-btn').forEach(btn => btn.classList.toggle('hidden', !isAdmin));
    }
  } catch(e) { console.error(e); }
}

document.addEventListener('DOMContentLoaded', checkAndToggleAdminButtons);

function deleteNews(newsId) {
  if(confirm('¿Estás seguro?')) {
    console.log('Eliminar noticia', newsId);
    // Aquí iría tu fetch DELETE
  }
}
</script>
