---
--- 

<div class="bg-slate-800 text-slate-200 text-xs">
  <div class="container mx-auto px-4 flex justify-end gap-4 py-1">
    <a href="/lang" class="hidden sm:inline">ES</a>
    <button id="adminToggle" class="cursor-pointer bg-transparent border-none text-inherit p-1 rounded hover:bg-slate-700 transition-colors">Admin</button>
  </div>
</div>

<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  const adminToggle = document.getElementById('adminToggle');
  let currentAdminStatus = false;
  let isProcessing = false;
  
  console.log('üöÄ [TOPUTILITY] Iniciado');

  // Verificar estado inicial
  async function checkAdminStatus() {
    try {
      const response = await fetch('http://localhost:8080/api/session/check-admin', { credentials: 'include' });
      if (response.ok) {
        const isAdmin = await response.json();
        currentAdminStatus = isAdmin;
        updateUI(isAdmin);
        localStorage.setItem('adminStatus', JSON.stringify(isAdmin));
        return isAdmin;
      }
    } catch (error) {
      console.error('‚ùå [TOPUTILITY] Error inicial:', error);
    }
    return false;
  }

  // Cambiar estado admin
  async function toggleAdminStatus() {
    if (isProcessing) return;
    isProcessing = true;
    adminToggle.textContent = 'Cargando...';

    try {
      const newStatus = !currentAdminStatus;
      const endpoint = newStatus 
        ? 'http://localhost:8080/api/session/login-admin'
        : 'http://localhost:8080/api/session/set-admin?admin=false';
      
      const response = await fetch(endpoint, { method: 'POST', credentials: 'include' });
      if (response.ok) {
        const verified = await (await fetch('http://localhost:8080/api/session/check-admin', { credentials: 'include' })).json();
        if (verified === newStatus) {
          currentAdminStatus = verified;
          localStorage.setItem('adminStatus', JSON.stringify(verified));
          updateUI(verified);
          window.dispatchEvent(new CustomEvent('adminStatusChanged', { detail: { isAdmin: verified, source: 'TopUtility' } }));
          console.log('‚úÖ [TOPUTILITY] Estado cambiado:', verified);
          setTimeout(() => window.location.reload(), 300);
        }
      }
    } catch (error) {
      console.error('‚ùå [TOPUTILITY] Error toggle:', error);
      updateUI(currentAdminStatus);
    } finally {
      isProcessing = false;
    }
  }

  // Actualizar UI
  function updateUI(isAdmin) {
    adminToggle.textContent = isAdmin ? 'Close Admin' : 'Admin';
    adminToggle.classList.toggle('text-green-400', isAdmin);
    adminToggle.classList.toggle('font-bold', isAdmin);
  }

  adminToggle.addEventListener('click', toggleAdminStatus);
  checkAdminStatus();
});
</script>
