---
import NewsCard from "./CCNewsList/NewsCard.astro";
import NewsAdd from "./NewsAdd.astro";

interface News {
  id: string;
  title: string;
  description: string;
  participants: string[];
  FirstprojectDate: string; 
  SecondprojectDate: string; 
  tags: string[];
  workIds: string[];
  image?: string;
  link?: string;
}

interface Props {
  news: News[];
  isAdmin?: boolean;
}

const { news, isAdmin = false } = Astro.props;
---

<!-- Componente para añadir noticias (solo si es admin) - HEREDA isAdmin del padre -->
{isAdmin && <NewsAdd isAdmin={isAdmin} />}

<!-- Barra de búsqueda -->
<div class="mb-6">
  <div class="relative max-w-md mx-auto">
    <input
      type="text"
      id="search-input"
      placeholder="Buscar noticias..."
      class="w-full px-4 py-2 pl-10 pr-4 text-gray-700 bg-white border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#006D38] focus:border-transparent transition-all"
    />
    <div class="absolute inset-y-0 left-0 flex items-center pl-3">
      <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
      </svg>
    </div>
  </div>
</div>

<!-- Lista de noticias -->
<div class="space-y-6" id="news-list">
  {news && news.length > 0 ? (
    news.map((newsItem, index) => {
      const validatedNews = {
        id: newsItem.id || `news-${index}`,
        title: newsItem.title || 'Sin título',
        description: newsItem.description || 'Sin descripción',
        participants: Array.isArray(newsItem.participants) ? newsItem.participants : [],
        FirstprojectDate: newsItem.FirstprojectDate || '',
        SecondprojectDate: newsItem.SecondprojectDate || '',
        tags: Array.isArray(newsItem.tags) ? newsItem.tags : [],
        workIds: Array.isArray(newsItem.workIds) ? newsItem.workIds : [],
        image: newsItem.image,
        link: newsItem.link
      };
      
      return (
        <!-- HEREDA isAdmin del componente padre -->
        <NewsCard news={validatedNews} isAdmin={isAdmin} />
      );
    })
  ) : (
    <div class="text-center py-12">
      <div class="max-w-md mx-auto">
        <div class="w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center">
          <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
          </svg>
        </div>
        <h3 class="text-lg font-medium text-gray-900 mb-2">No hay noticias disponibles</h3>
        <p class="text-gray-500 mb-4">Las noticias aparecerán aquí cuando estén disponibles.</p>
        {isAdmin && (
          <p class="text-sm text-gray-400">Como administrador, puedes crear la primera noticia usando el botón "Añadir Noticia" de arriba.</p>
        )}
      </div>
    </div>
  )}
</div>

<!-- SCRIPT SIMPLIFICADO - Solo funcionalidad de búsqueda -->
<script is:inline>
document.addEventListener("DOMContentLoaded", function () {
  // Setup search functionality - NO verifica admin, solo funcionalidad
  const searchInput = document.getElementById("search-input");
  if (searchInput) {
    searchInput.addEventListener("input", function () {
      const searchTerm = this.value.toLowerCase().trim();
      const newsItems = document.querySelectorAll(".news-card");

      newsItems.forEach((newsItem) => {
        const title = newsItem.querySelector("h3")?.textContent?.toLowerCase() || '';
        const description = newsItem.querySelector("p")?.textContent?.toLowerCase() || '';
        
        const participants = Array.from(newsItem.querySelectorAll('p')).find(p => 
          p.textContent.includes('Participantes:')
        )?.textContent?.toLowerCase() || '';
        
        const tags = Array.from(newsItem.querySelectorAll('.tag')).map(tag => 
          tag.textContent?.toLowerCase() || ''
        ).join(' ');
        
        const matches = title.includes(searchTerm) || 
                       description.includes(searchTerm) ||
                       participants.includes(searchTerm) ||
                       tags.includes(searchTerm);
        
        if (matches) {
          newsItem.style.display = "block";
          newsItem.classList.remove('hidden');
        } else {
          newsItem.style.display = "none";
          newsItem.classList.add('hidden');
        }
      });
      
      const visibleCards = document.querySelectorAll('.news-card:not(.hidden)');
      const noResultsMessage = document.getElementById('no-results-message');
      
      if (visibleCards.length === 0 && searchTerm) {
        if (!noResultsMessage) {
          createNoResultsMessage();
        }
        document.getElementById('no-results-message').style.display = 'block';
      } else if (noResultsMessage) {
        noResultsMessage.style.display = 'none';
      }
    });
  }
});

function createNoResultsMessage() {
  const newsList = document.getElementById('news-list');
  const noResultsDiv = document.createElement('div');
  noResultsDiv.id = 'no-results-message';
  noResultsDiv.className = 'text-center py-8 text-gray-500';
  noResultsDiv.style.display = 'none';
  noResultsDiv.innerHTML = `
    <svg class="w-12 h-12 mx-auto mb-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
    </svg>
    <p class="text-lg font-medium mb-2">No se encontraron noticias</p>
    <p class="text-sm">Intenta con otros términos de búsqueda</p>
  `;
  newsList.appendChild(noResultsDiv);
}

function showNotification(message, type = 'info') {
  let notification = document.getElementById('notification');
  if (!notification) {
    notification = document.createElement('div');
    notification.id = 'notification';
    notification.className = 'fixed top-4 right-4 z-50 px-4 py-2 rounded-md text-white transition-all duration-300 transform translate-x-full';
    document.body.appendChild(notification);
  }

  const typeStyles = {
    info: 'bg-blue-500',
    warning: 'bg-yellow-500',
    error: 'bg-red-500',
    success: 'bg-green-500'
  };

  notification.className = `fixed top-4 right-4 z-50 px-4 py-2 rounded-md text-white transition-all duration-300 ${typeStyles[type]}`;
  notification.textContent = message;

  setTimeout(() => {
    notification.classList.remove('translate-x-full');
  }, 10);

  setTimeout(() => {
    notification.classList.add('translate-x-full');
  }, 3000);
}
</script>

<style>
  .news-card {
    transition: all 0.3s ease;
  }
  
  .news-card.hidden {
    opacity: 0;
    transform: scale(0.95);
    pointer-events: none;
  }
  
  #search-input {
    transition: all 0.2s ease;
  }
  
  #search-input:focus {
    transform: scale(1.02);
    box-shadow: 0 4px 12px rgba(0, 109, 56, 0.15);
  }
  
  #no-results-message {
    animation: fadeIn 0.3s ease-in;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @media (max-width: 768px) {
    .space-y-6 > * + * {
      margin-top: 1rem;
    }
    
    #search-input {
      font-size: 16px;
    }
  }
</style>