---
import NewsEdit from "./NewsEdit.astro";
import NewsDelete from "./NewsDelete.astro";

interface Props {
  news: {
    id: string;
    title: string;
    description: string;
    participants: string[];
    FirstprojectDate: string; 
    SecondprojectDate: string; 
    tags: string[];
    workIds: string[];
    image?: string;
    link?: string;
  };
  isAdmin?: boolean;
}

const { news, isAdmin = false } = Astro.props;
const cardId = `news-card-${news.id}`;

// Formatear fechas para mostrar
const formatDate = (dateString: string) => {
  if (!dateString) return '';
  const date = new Date(dateString);
  return date.getFullYear().toString();
};

const startYear = formatDate(news.FirstprojectDate);
const endYear = formatDate(news.SecondprojectDate);
const dateRange = startYear && endYear ? `${startYear} / ${endYear}` : startYear || endYear || '';
---

<div
  id={cardId}
  class="news-card bg-white border rounded-lg shadow-sm transition-all duration-300 hover:shadow-md relative overflow-hidden"
  data-news-id={news.id}
>
  <!-- Botones de admin -->
  <NewsEdit news={news} isAdmin={isAdmin} />
  <NewsDelete news={news} cardId={cardId} isAdmin={isAdmin} />
  
  <div class="flex min-h-48">
    <!-- Imagen a la izquierda centrada -->
    <div class="w-80 flex-shrink-0 flex items-center justify-center p-4">
      <img 
        src={news.image || '/images/default-news.jpg'} 
        alt={news.title}
        class="w-50 h-50 object-cover rounded-lg shadow-sm"
        loading="lazy"
      />
    </div>

    <!-- Contenido ocupando todo el espacio restante -->
    <div class="flex-1 p-4 flex flex-col min-w-0">
      <!-- Fecha/Período -->
      {dateRange && (
        <div class="mb-2">
          <span class="bg-[#1D293D] text-white text-xs px-2 py-1 rounded-full font-medium">
            {dateRange}
          </span>
        </div>
      )}

      <!-- Título -->
      <h3 class="text-lg font-bold text-gray-900 mb-2 leading-tight break-words">
        {news.title}
      </h3>

      <!-- Descripción completa -->
      <div class="flex-grow mb-3">
        <p class="text-gray-600 text-sm leading-relaxed break-words">
          {news.description}
        </p>
      </div>

      <!-- Participantes (si existen) -->
      {news.participants && news.participants.length > 0 && (
        <div class="mb-3">
          <p class="text-sm text-gray-600">
            <span class="font-semibold">Participantes:</span> {news.participants.join(", ")}
          </p>
        </div>
      )}

      <!-- Footer con tags y botón -->
      <div class="flex justify-between items-end mt-auto pt-2">
        <!-- Tags -->
        {news.tags && news.tags.length > 0 && (
          <div class="flex flex-wrap gap-1 flex-1 mr-3 min-w-0">
            {news.tags.slice(0, 2).map((tag) => (
              <span class="bg-[#006D38] text-white text-xs px-2 py-1 rounded-full flex-shrink-0 break-words tag">
                {tag}
              </span>
            ))}
            {news.tags.length > 2 && (
              <span class="text-xs text-gray-500 px-2 py-1 flex-shrink-0">
                +{news.tags.length - 2}
              </span>
            )}
          </div>
        )}

        <!-- Botón de enlace -->
        <div class="flex-shrink-0">
          {news.link ? (
            <a 
              href={news.link}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center text-[#006D38] hover:text-[#005229] font-medium text-sm transition-colors whitespace-nowrap"
            >
              Ver más
              <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
              </svg>
            </a>
          ) : (
            <button 
              class="inline-flex items-center text-[#006D38] hover:text-[#005229] font-medium text-sm transition-colors whitespace-nowrap"
              onclick={`alert('Noticia: ${news.title}')`}
            >
              Ver detalles
              <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
              </svg>
            </button>
          )}
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .news-card {
    transition: all 0.3s ease;
  }

  .news-card:hover {
    transform: translateY(-1px);
  }

  .break-words {
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-word;
  }

  .min-w-0 {
    min-width: 0;
  }

  @media (max-width: 768px) {
    .news-card .flex {
      flex-direction: column;
    }
    
    .news-card .w-80 {
      width: 100%;
      height: 160px;
    }
    
    .news-card img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 0.5rem 0.5rem 0 0;
    }
  }

  @media (max-width: 480px) {
    .news-card {
      margin: 0.5rem;
    }
    
    .news-card .text-lg {
      font-size: 1rem;
    }
    
    .news-card .text-sm {
      font-size: 0.875rem;
    }
  }
</style>