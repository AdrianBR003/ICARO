---
import BaseLayout from "@/layouts/BaseLayout.astro";
import TopUtility from "@/components/TopUtility.astro";
import NavBar from "@/components/NavBar.astro";
import Header from "@/components/Header.astro";
import "@/styles/index.css";

let works = [];
try {
  const res = await fetch("http://localhost:8080/api/works/all");
  if (!res.ok) throw new Error(`Error HTTP: ${res.status}`);
  works = await res.json();
} catch (e) {
  console.error("No se pudo obtener la lista de trabajos:", e);
  works = [];
}

const groupsObj = {};
works.forEach((w) => {
  const year = w.projectDate?.slice(0, 4) || "Sin fecha";
  if (!groupsObj[year]) groupsObj[year] = [];
  groupsObj[year].push(w);
});
const noDate = groupsObj["Sin fecha"] || [];
delete groupsObj["Sin fecha"];
const researchGroups = Object.entries(groupsObj)
  .map(([year, items]) => ({ year, items }))
  .sort((a, b) => b.year.localeCompare(a.year, { numeric: true }));
if (noDate.length) researchGroups.push({ year: "Sin fecha", items: noDate });
---

<BaseLayout>
  <section class="max-w-full bg-white shadow-md rounded-lg">
    <TopUtility />
    <Header />
  </section>
  <section class="mt-10 max-w-full bg-white shadow-md">
    <NavBar />
  </section>

  <section class="max-w-4xl mx-auto px-4 py-8">
    <div class="mb-10">
      <div class="relative max-w-full">
        <span
          class="absolute inset-y-0 left-0 flex items-center pl-4 text-gray-500"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
            fill="currentColor"
            class="w-5 h-5"
          >
            <path
              fill-rule="evenodd"
              d="M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z"
              clip-rule="evenodd"></path>
          </svg>
        </span>
        <input
          id="search-input"
          type="search"
          placeholder="Buscar publicaciones por título..."
          class="w-full pl-11 pr-4 py-3 border border-gray-300 rounded-lg text-gray-800 focus:ring-2 focus:ring-cyan-400 focus:border-cyan-400 transition"
        />
      </div>
    </div>

    <!-- FILTRO POR CATEGORÍAS -->
    <div class="mb-10">
      <div id="category-filters" class="flex flex-wrap gap-3"></div>
    </div>

    <script>
      const articles = Array.from(
        document.querySelectorAll(".publication-entry"),
      );
      const categoriesSet = new Set();

      articles.forEach((article) => {
        const tagsStr = article.getAttribute("data-tags") || "";
        const tags = tagsStr
          .split(",")
          .map((t) => t.trim())
          .filter(Boolean);
        tags.forEach((tag) => categoriesSet.add(tag));
      });
      const categoryFilters = document.getElementById("category-filters");
      let activeFilters = new Set();
      const colorPalette = [
        "bg-red-100 text-red-800 hover:bg-red-200 border-red-200",
        "bg-blue-100 text-blue-800 hover:bg-blue-200 border-blue-200",
        "bg-green-100 text-green-800 hover:bg-green-200 border-green-200",
        "bg-yellow-100 text-yellow-800 hover:bg-yellow-200 border-yellow-200",
        "bg-purple-100 text-purple-800 hover:bg-purple-200 border-purple-200",
        "bg-pink-100 text-pink-800 hover:bg-pink-200 border-pink-200",
        "bg-indigo-100 text-indigo-800 hover:bg-indigo-200 border-indigo-200",
        "bg-cyan-100 text-cyan-800 hover:bg-cyan-200 border-cyan-200",
        "bg-amber-100 text-amber-800 hover:bg-amber-200 border-amber-200",
        "bg-emerald-100 text-emerald-800 hover:bg-emerald-200 border-emerald-200",
      ];
      function updateArticlesDisplay() {
        articles.forEach((article) => {
          const tags =
            article
              .getAttribute("data-tags")
              ?.split(",")
              .map((t) => t.trim()) || [];
          if (activeFilters.size === 0) {
            article.style.display = "";
            return;
          }
          const hasAllFilters = Array.from(activeFilters).every((filter) =>
            tags.includes(filter),
          );
          article.style.display = hasAllFilters ? "" : "none";
        });
      }
      let colorIndex = 0;
      categoriesSet.forEach((category) => {
        const btn = document.createElement("button");
        btn.type = "button";
        btn.textContent = category;
        btn.className = `category-btn ${colorPalette[colorIndex]} px-4 py-2 rounded-full font-medium 
                     border transition-all duration-200 shadow-sm hover:shadow-md`;
        btn.dataset.category = category;

        colorIndex = (colorIndex + 1) % colorPalette.length;
        btn.addEventListener("click", () => {
          btn.classList.toggle("!bg-cyan-600");
          btn.classList.toggle("!text-white");
          btn.classList.toggle("!border-cyan-700");
          btn.classList.toggle("scale-105");

          if (btn.classList.contains("!bg-cyan-600")) {
            activeFilters.add(category);
          } else {
            activeFilters.delete(category);
          }

          updateArticlesDisplay();
        });

        categoryFilters.appendChild(btn);
      });

      function clearFilters() {
        activeFilters.clear();
        document.querySelectorAll(".category-btn").forEach((btn) => {
          btn.classList.remove(
            "!bg-cyan-600",
            "!text-white",
            "!border-cyan-700",
            "scale-105",
          );
        });
        updateArticlesDisplay();
      }
    </script>

    <style>
      .category-btn {
        transition:
          background-color 0.2s ease,
          color 0.2s ease,
          transform 0.2s ease,
          box-shadow 0.2s ease,
          border-color 0.2s ease;
      }

      .category-btn:hover {
        transform: translateY(-2px);
        box-shadow:
          0 4px 6px -1px rgba(0, 0, 0, 0.1),
          0 2px 4px -1px rgba(0, 0, 0, 0.06);
      }

      .category-btn.active {
        transform: scale(1.05);
        box-shadow:
          0 4px 6px -1px rgba(0, 0, 0, 0.1),
          0 2px 4px -1px rgba(0, 0, 0, 0.06);
      }
    </style>

    <div class="mb-6 flex items-center gap-3 justify-end">
      <span class="text-sm text-gray-600">Año:</span>
      <div class="relative">
        <select
          id="year-filter"
          class="appearance-none bg-white border border-gray-300 rounded-md px-3 py-1 pr-7 text-sm focus:ring-1 focus:ring-cyan-400 focus:border-cyan-400 transition cursor-pointer"
        >
          <option value="all">Todos</option>
        </select>
        <div
          class="pointer-events-none absolute inset-y-0 right-1 flex items-center px-1 text-gray-500"
        >
          <svg class="h-4 w-4" fill="currentColor" viewBox="0 0 20 20">
            <path
              fill-rule="evenodd"
              d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
              clip-rule="evenodd"></path>
          </svg>
        </div>
      </div>
    </div>

    <script>
      const yearSet = new Set();
      document.querySelectorAll(".publication-entry").forEach((article) => {
        const dateText = article.querySelector(
          "p.text-sm.italic.text-gray-600",
        )?.textContent;
        const yearMatch = dateText?.match(/\b(20\d{2})\b/);
        if (yearMatch && yearMatch[1]) {
          yearSet.add(yearMatch[1]);
        }
      });

      const sortedYears = Array.from(yearSet).sort((a, b) => b - a);

      const yearFilter = document.getElementById("year-filter");
      sortedYears.forEach((year) => {
        const option = document.createElement("option");
        option.value = year;
        option.textContent = year;
        yearFilter.insertBefore(option, yearFilter.lastElementChild);
      });

      yearFilter.addEventListener("change", function () {
        const selectedYear = this.value;

        document.querySelectorAll(".publication-entry").forEach((article) => {
          if (selectedYear === "all") {
            article.style.display = "";
            return;
          }

          const dateText = article.querySelector(
            "p.text-sm.italic.text-gray-600",
          )?.textContent;
          const articleYear = dateText?.match(/\b(20\d{2})\b/)?.[1];

          article.style.display = articleYear === selectedYear ? "" : "none";
        });
      });
    </script>

    <style>
      #year-filter {
        -webkit-appearance: none;
        -moz-appearance: none;
        background-image: none;
        padding-right: 1.75rem;
      }

      #year-filter:hover {
        border-color: #9ca3af;
      }
    </style>

    <div class="space-y-8" id="publications">
      <article
        class="publication-entry border rounded-lg p-6 shadow-sm bg-white transition-all duration-300 hover:shadow-md hover:scale-[1.02]"
        data-tags="conference-paper,haptic,perceiving,vision"
      >
        <div class="flex flex-wrap gap-2 mb-3">
          <span
            class="bg-cyan-100 text-cyan-800 text-xs px-2 py-1 rounded font-medium"
            >Haptic Intelligence</span
          >
          <span
            class="bg-cyan-100 text-cyan-800 text-xs px-2 py-1 rounded font-medium"
            >Perceiving Systems</span
          >
          <span
            class="bg-gray-200 text-gray-800 text-xs px-2 py-1 rounded font-medium"
            >Conference Paper</span
          >
        </div>
        <h3 class="text-xl font-bold text-gray-900 leading-snug mb-2">
          Contact-Aware Refinement of Human Pose Pseudo-Ground Truth via
          Bioimpedance Sensing
        </h3>
        <p class="text-sm text-gray-700 mb-1">
          Forte, M., Athanasiou, N., Ballardini, G., Bartels, U., Kuchenbecker,
          K. J., Black, M.
        </p>
        <p class="text-sm italic text-gray-600">
          In Proceedings of the IEEE/CVF International Conference on Computer
          Vision (ICCV), Honolulu, USA, October 2025 <span
            class="text-green-600 font-medium">(Accepted)</span
          >
        </p>
        <button
          class="mt-4 bg-gray-100 text-gray-800 text-xs px-3 py-1 rounded hover:bg-gray-200 transition"
          type="button"
        >
          BibTeX
        </button>
      </article>

      <article
        class="publication-entry border rounded-lg p-6 shadow-sm bg-white transition-all duration-300 hover:shadow-md hover:scale-[1.02]"
        data-tags="book,mpi,ml"
      >
        <div class="flex flex-wrap gap-2 mb-3">
          <span
            class="bg-cyan-100 text-cyan-800 text-xs px-2 py-1 rounded font-medium"
            >MPI Only</span
          >
          <span
            class="bg-gray-200 text-gray-800 text-xs px-2 py-1 rounded font-medium"
            >Book</span
          >
        </div>
        <h3 class="text-xl font-bold text-gray-900 leading-snug mb-2">
          Foundations of Bio-Sensing in Motion Capture
        </h3>
        <p class="text-sm text-gray-700 mb-1">
          Martínez, D., Schulz, H., Becker, T.
        </p>
        <p class="text-sm italic text-gray-600">Springer Science, 2024.</p>
        <button
          class="mt-4 bg-gray-100 text-gray-800 text-xs px-3 py-1 rounded hover:bg-gray-200 transition"
          type="button"
        >
          BibTeX
        </button>
      </article>
    </div>
  </section>
</BaseLayout>

<style>
  .publication-entry {
    transition:
      box-shadow 0.3s ease,
      transform 0.3s ease;
  }
</style>
