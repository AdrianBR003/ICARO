---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Header from "@/components/CCommon/Header.astro";
import NavBar from "@/components/CCommon/NavBar.astro";
import TopUtility from "@/components/CCommon/TopUtility.astro";
import CTitle from "@/components/CCommon/TitlePages.astro";
import NewsList from "@/components/CNews/NewsList.astro";
import "@/styles/index.css";
import imagedefault from "@/assets/imagedefault.webp";

let newsData = [];

// Fetch de noticias (SSR)
try {
  const API_BASE = import.meta.env.API_URL || 'http://localhost:8080';
  const res = await fetch(`${API_BASE}/api/news/all`);
  if (res.ok) newsData = await res.json();
} catch {
  console.error('‚ùå [NEWS] Error fetch news');
  newsData = [{
    id: '1',
    title: "Noticia de prueba",
    description: "Esta es una noticia de prueba...",
    participants: ["Investigador 1", "Investigador 2"],
    image: imagedefault.src,
    link: "/news/1",
    FirstprojectDate: '',
    SecondprojectDate: ''
  }];
}

const getImageSrc = (img) =>
  (!img ? imagedefault.src : (img.startsWith('http') || img.startsWith('/')) ? img : `/images/${img}`);

const formattedNews = newsData.map(item => ({
  id: item.id?.toString() || '1',
  title: item.title || 'Sin t√≠tulo',
  description: item.description || 'Sin descripci√≥n',
  participants: Array.isArray(item.participants) ? item.participants : [],
  image: getImageSrc(item.image),
  link: item.link || `/news/${item.id}`,
  FirstprojectDate: item.FirstprojectDate || '',
  SecondprojectDate: item.SecondprojectDate || ''
}));

let isAdmin = false; // üö® siempre false en SSR
---

<BaseLayout>
  <section class="max-w-full bg-white shadow-md rounded-lg">
    <TopUtility />
    <Header />
  </section>
  <section class="my-10 max-w-full bg-white shadow-md">
    <NavBar />
  </section>

  <CTitle Title="News" />

  <section class="w-full px-4 mx-auto max-w-custom">
    <div class="text-center mb-10">
      <p class="text-lg text-gray-600 mx-auto max-w-2xl">
        Nuestro grupo de investigaci√≥n se especializa en telecomunicaci√≥n y procesamiento de se√±ales.
      </p>
    </div>

    <NewsList news={formattedNews} isAdmin={isAdmin} />
  </section>
</BaseLayout>

<script is:inline>
document.addEventListener('DOMContentLoaded', async () => {
  // Obtener estado real de admin en cliente
  const fetchAdminStatus = async () => {
    try {
      const res = await fetch('http://localhost:8080/api/session/check-admin', { credentials: 'include' });
      if (res.ok) {
        const admin = await res.json();
        window.dispatchEvent(new CustomEvent('adminStatusChanged', { detail: { isAdmin: admin, source: 'News.astro' } }));
      }
    } catch (err) {
      console.error('[NEWS] Error fetch admin:', err);
    }
  };

  fetchAdminStatus();

  // Actualizar localStorage si quieres mantener estado persistente
  window.addEventListener('adminStatusChanged', (e) => {
    localStorage.setItem('adminStatus', JSON.stringify(e.detail.isAdmin));
  });
});
</script>

<style>
  .max-w-custom { max-width: 1200px; }
</style>
